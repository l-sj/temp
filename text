Subversion ::
Perforce ::
Bazaar ::
Atomic ::
Committed ::
Modified ::
Staged ::
Staging ::
Area ::
Local ::
Operations ::
checkout ::
expat ::
curl ::
Fedora ::
Forge ::
SourceForge ::
Port ::
Prompt ::
Emacs ::
difference :: 
different ::
differential ::
emerge ::
verb ::
Push ::
Pull ::
Skeleton ::
Contribute ::
Tracked ::
Untracked ::
Unmodified ::
Tracked : 관리대상임
Untracked : 관리대상이 아닌 상태
Unmodified : 수정하지 않은 상태
Modified : 수정한 상태
Staged : 커밋하면 저장소에 기록되는 상태
status ::
directory ::
README ::
branch ::
bench marks ::
ignore ::

.gitignore 파일에 입력하는 패턴은 아래 규칙을 따른다:
	- 아무것도 없는 줄이나, #로 시작하는 줄은 무시한다.
	- 표준 Glob 패턴을 사용한다.
	- 디렉토리는 슬래시(/)를 끝에 사용하는 것으로 표현한다.
	- 느낌표(!)로 시작하는 패턴의 파일은 무시하지 않는다.

	# a comment - 이 줄은 무시한다.
	# 확장자가 .a인 파일 무시
	*.a
	# 윗 줄에서 확장자가 .a인 파일은 무시하게 했지만 lib.a는 무시하지 않는다.
	!lib.a
	# 루트 디렉토리에 있는 TODO파일은 무시하고 subdir/TODO처럼 하위디렉토리에 있는 파일은 무시하지 않는다.
	/TODO
	# build/ 디렉토리에 있는 모든 파일은 무시한다.
	build/
	# `doc/notes.txt`같은 파일은 무시하고 doc/server/arch.txt같은 파일은 무시하지 않는다.
	doc/*.txt
	# `doc` 디렉토리 아래의 모든 .txt 파일을 무시한다.
	doc/**/*.txt

Patch ::
unnecessary ::
pretty ::
format ::
hash ::
Abbreviated ::
Author ::
Committer ::
Author : 저자는 원래 작업을 수행한 원작자
Committer : 마지막으로 이 작업을 적용한 사람
만약 당신이 어떤 프로젝트에 패치를 보냈고 그 프로젝트의 담당자가 패치를 적용했다면 두 명의 정보를 모두 알 필요가 있다. 그래서 이 경우 당신이 저자고 그 담당자가 커미터다. 

ASCII :: 아스키 : American Standard Code for Information Interchange의 약어

relative ::
since ::
until ::
minutes ::
ago ::
match ::
